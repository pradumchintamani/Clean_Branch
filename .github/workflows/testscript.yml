name: Check Branches

on:
  workflow_dispatch:
    inputs:
      thresholdDays:
        description: 'Threshold days for branch age'
        required: true

jobs:
  check-branches:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Run PowerShell Script
      shell: pwsh
      run: |
        # Set the threshold days as an environment variable
        $env:THRESHOLD_DAYS = ${{ github.event.inputs.thresholdDays }}

        # Define the PowerShell script inline
        $script = @'
          param (
              [Parameter(Mandatory=$true)]
              [int]$thresholdDays
          )


            $repoOwner = "your_username_or_organization"
            $repoName = "your_repository_name"
            $token = $env:GITHUB_TOKEN  # GITHUB_TOKEN is automatically provided by GitHub Actions
            
            # Get the list of branches using GitHub API
            $headers = @{
                Authorization = "Bearer $token"
            }
            
            $branchesUrl = "https://api.github.com/repos/$repoOwner/$repoName/branches"
            $branches = Invoke-RestMethod -Uri $branchesUrl -Headers $headers
            
            # Get current date
            $currentDate = Get-Date
            
            # Filter branches based on last commit date
            foreach ($branch in $branches) {
                $lastCommitUrl = $branch.commit.url
                $lastCommit = Invoke-RestMethod -Uri $lastCommitUrl -Headers $headers
                $lastCommitDate = [datetime]$lastCommit.commit.author.date
                $daysDifference = ($currentDate - $lastCommitDate).Days
            
                if ($daysDifference -gt $thresholdDays) {
                    Write-Host "Branch $($branch.name) is older than $thresholdDays days (Last commit on $($lastCommitDate.ToShortDateString()))."
                }
            }
            '@
            
                    # Save the script to a temporary file
                    $scriptPath = Join-Path $env:TEMP 'check-branches.ps1'
                    $script | Out-File -FilePath $scriptPath -Encoding UTF8
            
                    # Run the PowerShell script
                    . $scriptPath
