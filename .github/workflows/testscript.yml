name: Check and Delete Stale Branches

on:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days to consider branches as old'
        required: true
        type: string
      dry_run:
        description: 'Whether to perform a dry run (true/false)'
        required: false
        type: boolean

permissions: write-all

jobs:
  check_branches:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GET_ALL }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run script to check branches
      id: check_branches_script
      run: |
        username="pradumchintamani"
        repo="Clean_Branch"
        echo -n > output_file.txt
        excluded_branches=()
        while IFS= read -r line; do
          excluded_branches+=( "$line" )
        done < input_file.txt
        
        branches=$(gh api repos/$username/$repo/branches -q ".[].name")
        for branch in $branches; do
          # Check if the branch is excluded
          if [[ " ${excluded_branches[@]} " =~ " $branch " ]]; then
            echo "Excluded branch: $branch"
            continue
          fi
          
          # If the branch is not excluded, check if it's old enough for deletion
          commit_date=$(gh api repos/$username/$repo/commits/$branch -q ".commit.committer.date")
          if [[ "$(date -d"$commit_date" +%s)" -lt "$(date -d"${{ github.event.inputs.days }} days ago" +%s)" ]]; then
            echo $branch >> output_file.txt
          fi
        done
      env:
        INPUT_DAYS_SINCE_LAST_COMMIT: ${{ github.event.inputs.days }}

    - name: Upload output file as artifact
      uses: actions/upload-artifact@v4
      with:
        name: stale_branches_output
        path: output_file.txt

  delete_branches:
    runs-on: ubuntu-latest
    needs: check_branches
    if: ${{ github.event.inputs.dry_run != 'true' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download output file artifact
      uses: actions/download-artifact@v4
      with:
        name: stale_branches_output
        path: ${{ github.workspace }}

    - name: Read branches to delete
      id: read_output_file
      run: echo ::set-output name=branches::$(cat ${{ github.workspace }}/output_file.txt)

    - name: Delete branches
      run: |
        branches="${{ steps.read_output_file.outputs.branches }}"
        for branch in $branches; do
          echo "Deleting branch: $branch"
          # Uncomment the following line to perform actual deletion
          git push --delete origin $branch
        done
      env:
        INPUT_DAYS_SINCE_LAST_COMMIT: ${{ github.event.inputs.days }}    
