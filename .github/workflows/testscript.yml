name: List and Delete Stale Branches
on:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days to consider branches as Stale'
        required: true
        type: string
      dry_run:
        description: 'Whether to perform a dry run? (true/false)'
        required: false
        type: boolean
permissions: write-all

jobs:
  list_stale_branches:
    # runs-on: [self-hosted, linux, x64, gwam, provisioning-essentials, ubuntu-22.04, nonprod]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Define stale branches
      env:
          GH_TOKEN: ${{ secrets.GET_ALL }} # required to run gh cli
          INPUT_DAYS_SINCE_LAST_COMMIT: ${{ github.event.inputs.days }}
      run: |
        #!/bin/bash
        username="${{github.repository_owner}}" #name of your organization
        repo="${{ github.event.repository.name }}"  #name of your repository
        echo -n > stale_branches.txt
        excluded_branches=("develop", "main", "master")
          while IFS= read -r line; do
            excluded_branches+=( "$line" )
          done < protect_branches.txt
          branches=$(gh api repos/$username/$repo/branches -q ".[].name")
          for branch in $branches; do
            # Check if the branch is excluded
            if [[ " ${excluded_branches[@]} " =~ " $branch " ]]; then
              echo "Excluded branch: $branch"
              continue
            fi            
            # If the branch is not excluded, check if it's old enough for deletion
            commit_date=$(gh api repos/$username/$repo/commits/$branch -q ".commit.committer.date")
            if [[ "$(date -d"$commit_date" +%s)" -lt "$(date -d"$INPUT_DAYS_SINCE_LAST_COMMIT days ago" +%s)" ]]; then
              echo $branch >>  stale_branches.txt
            fi
          done
     
    - name: Commit artifact changes
      continue-on-error: true
      run: |
              
              git config --local user.name "GitHub Actions"
              git config --local user.email "actions@github.com"
              git add .
              git commit -m "Add stale branches output"
              git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git
              git push --set-upstream origin $GITHUB_REF    
  
    - name: Upload artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: stale_branches_output
        path:  stale_branches.txt
          
  delete_stale_branches:
    # runs-on:  [ self-hosted, linux, x64, gwam, provisioning-essentials, ubuntu-22.04, nonprod ]
    runs-on: ubuntu-latest
    needs: list_stale_branches
    if: ${{ github.event.inputs.dry_run != 'false' }}
    environment: Dev
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Download output file artifact
      uses: actions/download-artifact@v4.1.2
      with:
        name: stale_branches_output
        path: ${{ github.workspace }}
    - name: Read branches to delete
      id: read_output_file
      run: echo ::set-output name=branches::$(cat ${{ github.workspace }}/stale_branches.txt)
    - name: Delete branches
      run: |
        branches="${{ steps.read_output_file.outputs.branches }}"
        for branch in $branches; do
          echo "Deleting branch: $branch"
          # Uncomment the following line to perform actual deletion

          # git push --delete origin $branch
        done
      env:
        INPUT_DAYS_SINCE_LAST_COMMIT: ${{ github.event.inputs.days }}    
